{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern\\\\food-del\\\\client\\\\src\\\\components\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\n//RestaurantList.js\n\n/*import React, { useContext, useState, useEffect } from 'react';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport { RestaurantContext } from '../contexts/RestaurantContext';\r\nimport PreviousOrders from './PreviousOrders';\r\n\r\n\r\nconst RestaurantList = () => {\r\n    const { restaurants, setSelectedRestaurant } = useContext(RestaurantContext);\r\n    const [filteredRestaurants, setFilteredRestaurants] = useState([...restaurants]);\r\n    const [ratingFilter, setRatingFilter] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showOrder, setShowOrder] = useState(false)\r\n\r\n    useEffect(() => {\r\n        filterRestaurants();\r\n    }, [ratingFilter, searchTerm, restaurants]);\r\n\r\n    const handleRestaurantClick = (restaurantId) => {\r\n        setSelectedRestaurant(restaurants.find((restaurant) => restaurant._id === restaurantId));\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        setRatingFilter(e.target.value);\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const filterRestaurants = () => {\r\n        let filtered = restaurants;\r\n\r\n        if (ratingFilter) {\r\n            filtered = filtered.filter((restaurant) => restaurant.rating >= parseFloat(ratingFilter));\r\n        }\r\n\r\n        if (searchTerm) {\r\n            const searchLower = searchTerm.toLowerCase();\r\n            filtered = filtered.filter((restaurant) =>\r\n                restaurant.name.toLowerCase().includes(searchLower)\r\n            );\r\n        }\r\n\r\n        setFilteredRestaurants(filtered);\r\n    };\r\n    const handleShow = () => {\r\n        setShowOrder(!showOrder)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"header\">Restaurant List</h2>\r\n            <div className=\"filter-container\">\r\n                <label htmlFor=\"rating\" className=\"filter-label\">\r\n                    Filter by Rating:\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"rating\"\r\n                    value={ratingFilter}\r\n                    onChange={handleRatingChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <label htmlFor=\"search\" className=\"filter-label\">\r\n                    Search by Name:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <p id='pre-orders' onClick={handleShow}>\r\n                    Previous Orders\r\n                </p>\r\n            </div>\r\n            <div className=\"restaurant-card-container\">\r\n                {filteredRestaurants.map((restaurant) => (\r\n                    <RestaurantCard\r\n                        key={restaurant._id}\r\n                        restaurant={restaurant}\r\n                        onClick={() => handleRestaurantClick(restaurant._id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {showOrder && <PreviousOrders handleShow={handleShow} />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n*/\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport { RestaurantContext } from '../contexts/RestaurantContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const {\n    restaurants,\n    setSelectedRestaurant\n  } = useContext(RestaurantContext);\n  const [filteredRestaurants, setFilteredRestaurants] = useState([...restaurants]);\n  const [ratingFilter, setRatingFilter] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    filterRestaurants();\n  }, [ratingFilter, searchTerm, restaurants]);\n  const handleRestaurantClick = restaurantId => {\n    const restaurant = restaurants.find(r => r._id === restaurantId);\n    setSelectedRestaurant(restaurant);\n  };\n  const handleRatingChange = e => {\n    setRatingFilter(e.target.value);\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const filterRestaurants = () => {\n    let filtered = restaurants;\n    if (ratingFilter) {\n      filtered = filtered.filter(r => r.rating >= parseFloat(ratingFilter));\n    }\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(r => r.name.toLowerCase().includes(searchLower));\n    }\n    setFilteredRestaurants(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Restaurant List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rating\",\n        children: \"Filter by Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"rating\",\n        value: ratingFilter,\n        onChange: handleRatingChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        children: \"Search by Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-card-container\",\n      children: filteredRestaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        restaurant: restaurant,\n        onClick: () => handleRestaurantClick(restaurant._id)\n      }, restaurant._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantList, \"XBjZ4f0l+0dE54evOFZ8nkWfPm4=\");\n_c = RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useContext","useState","useEffect","RestaurantCard","RestaurantContext","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setSelectedRestaurant","filteredRestaurants","setFilteredRestaurants","ratingFilter","setRatingFilter","searchTerm","setSearchTerm","filterRestaurants","handleRestaurantClick","restaurantId","restaurant","find","r","_id","handleRatingChange","e","target","value","handleSearchChange","filtered","filter","rating","parseFloat","searchLower","toLowerCase","name","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","onClick","_c","$RefreshReg$"],"sources":["E:/mern/food-del/client/src/components/RestaurantList.js"],"sourcesContent":["//RestaurantList.js\r\n\r\n/*import React, { useContext, useState, useEffect } from 'react';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport { RestaurantContext } from '../contexts/RestaurantContext';\r\nimport PreviousOrders from './PreviousOrders';\r\n\r\n\r\nconst RestaurantList = () => {\r\n    const { restaurants, setSelectedRestaurant } = useContext(RestaurantContext);\r\n    const [filteredRestaurants, setFilteredRestaurants] = useState([...restaurants]);\r\n    const [ratingFilter, setRatingFilter] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showOrder, setShowOrder] = useState(false)\r\n\r\n    useEffect(() => {\r\n        filterRestaurants();\r\n    }, [ratingFilter, searchTerm, restaurants]);\r\n\r\n    const handleRestaurantClick = (restaurantId) => {\r\n        setSelectedRestaurant(restaurants.find((restaurant) => restaurant._id === restaurantId));\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        setRatingFilter(e.target.value);\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const filterRestaurants = () => {\r\n        let filtered = restaurants;\r\n\r\n        if (ratingFilter) {\r\n            filtered = filtered.filter((restaurant) => restaurant.rating >= parseFloat(ratingFilter));\r\n        }\r\n\r\n        if (searchTerm) {\r\n            const searchLower = searchTerm.toLowerCase();\r\n            filtered = filtered.filter((restaurant) =>\r\n                restaurant.name.toLowerCase().includes(searchLower)\r\n            );\r\n        }\r\n\r\n        setFilteredRestaurants(filtered);\r\n    };\r\n    const handleShow = () => {\r\n        setShowOrder(!showOrder)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"header\">Restaurant List</h2>\r\n            <div className=\"filter-container\">\r\n                <label htmlFor=\"rating\" className=\"filter-label\">\r\n                    Filter by Rating:\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"rating\"\r\n                    value={ratingFilter}\r\n                    onChange={handleRatingChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <label htmlFor=\"search\" className=\"filter-label\">\r\n                    Search by Name:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <p id='pre-orders' onClick={handleShow}>\r\n                    Previous Orders\r\n                </p>\r\n            </div>\r\n            <div className=\"restaurant-card-container\">\r\n                {filteredRestaurants.map((restaurant) => (\r\n                    <RestaurantCard\r\n                        key={restaurant._id}\r\n                        restaurant={restaurant}\r\n                        onClick={() => handleRestaurantClick(restaurant._id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {showOrder && <PreviousOrders handleShow={handleShow} />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n*/\r\n\r\n\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport { RestaurantContext } from '../contexts/RestaurantContext';\r\n\r\nconst RestaurantList = () => {\r\n    const { restaurants, setSelectedRestaurant } = useContext(RestaurantContext);\r\n    const [filteredRestaurants, setFilteredRestaurants] = useState([...restaurants]);\r\n    const [ratingFilter, setRatingFilter] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        filterRestaurants();\r\n    }, [ratingFilter, searchTerm, restaurants]);\r\n\r\n    const handleRestaurantClick = (restaurantId) => {\r\n        const restaurant = restaurants.find((r) => r._id === restaurantId);\r\n        setSelectedRestaurant(restaurant);\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        setRatingFilter(e.target.value);\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const filterRestaurants = () => {\r\n        let filtered = restaurants;\r\n\r\n        if (ratingFilter) {\r\n            filtered = filtered.filter((r) => r.rating >= parseFloat(ratingFilter));\r\n        }\r\n\r\n        if (searchTerm) {\r\n            const searchLower = searchTerm.toLowerCase();\r\n            filtered = filtered.filter((r) => r.name.toLowerCase().includes(searchLower));\r\n        }\r\n\r\n        setFilteredRestaurants(filtered);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"header\">Restaurant List</h2>\r\n            <div className=\"filter-container\">\r\n                <label htmlFor=\"rating\">Filter by Rating:</label>\r\n                <input type=\"number\" id=\"rating\" value={ratingFilter} onChange={handleRatingChange} />\r\n\r\n                <label htmlFor=\"search\">Search by Name:</label>\r\n                <input type=\"text\" id=\"search\" value={searchTerm} onChange={handleSearchChange} />\r\n            </div>\r\n            <div className=\"restaurant-card-container\">\r\n                {filteredRestaurants.map((restaurant) => (\r\n                    <RestaurantCard\r\n                        key={restaurant._id}\r\n                        restaurant={restaurant}\r\n                        onClick={() => handleRestaurantClick(restaurant._id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}