{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern\\\\food-del\\\\client\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\n//Cart.js\n\n/*import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\r\n\r\nconst Cart = () => {\r\n    const { totalPrice, emptyCart } = useContext(RestaurantContext);\r\n    const [isCheckingOut, setIsCheckingOut] = useState(false);\r\n\r\n    const generateOrderId = () => {\r\n        // Generate a unique order ID \r\n        // (you can use a library like uuid for a more robust solution)\r\n        return `${Math.floor(Math.random() * 1000)}`;\r\n    };\r\n\r\n    const handleCheckout = async () => {\r\n        try {\r\n            setIsCheckingOut(true);\r\n\r\n            const orderId = generateOrderId();\r\n\r\n            // Assuming you have a backend endpoint to handle the checkout\r\n            const response = await axios.post(\r\n                \"http://localhost:5000/previousOrders\",\r\n                {\r\n                    orderId,\r\n                    dateOfOrder: new Date(),\r\n                    amount: totalPrice,\r\n                }\r\n            );\r\n\r\n            console.log(response.data);\r\n            emptyCart();\r\n        } catch (error) {\r\n            console.error(\"Error during checkout:\", error.message);\r\n        } finally {\r\n            setIsCheckingOut(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <h2>Cart</h2>\r\n            <div className=\"cart-content\">\r\n                <span style={{ color: \"brown\" }}>Total Price: </span> $\r\n                {totalPrice}\r\n                <button onClick={handleCheckout} disabled={isCheckingOut}>\r\n                    {isCheckingOut ? \"Checking out...\" : \"Checkout\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n*/\n\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const {\n    totalPrice,\n    emptyCart\n  } = useContext(RestaurantContext);\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n  const [showDetailsForm, setShowDetailsForm] = useState(false);\n  const [customerDetails, setCustomerDetails] = useState({\n    name: \"\",\n    address: \"\",\n    phone: \"\"\n  });\n  const generateOrderId = () => {\n    return `${Math.floor(Math.random() * 1000)}`;\n  };\n  const handleCheckoutClick = () => {\n    setShowDetailsForm(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomerDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handlePlaceOrder = async () => {\n    try {\n      setIsCheckingOut(true);\n      const orderId = generateOrderId();\n\n      // Assuming you have a backend endpoint for placing orders\n      await axios.post(\"http://localhost:5000/previousOrders\", {\n        orderId,\n        dateOfOrder: new Date(),\n        amount: totalPrice,\n        ...customerDetails\n      });\n      alert(\"Order placed successfully!\");\n      emptyCart();\n      setShowDetailsForm(false);\n    } catch (error) {\n      console.error(\"Error during order placement:\", error.message);\n    } finally {\n      setIsCheckingOut(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: !showDetailsForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"brown\"\n          },\n          children: \"Total Price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), \" $\", totalPrice, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckoutClick,\n          disabled: isCheckingOut,\n          children: isCheckingOut ? \"Processing...\" : \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Delivery Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"delivery-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: customerDetails.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"address\",\n            value: customerDetails.address,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"phone\",\n            value: customerDetails.phone,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handlePlaceOrder,\n          disabled: isCheckingOut,\n          children: isCheckingOut ? \"Placing Order...\" : \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"A7AsYdf83dZKzLvWge1dc/RwBNI=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useState","axios","RestaurantContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","totalPrice","emptyCart","isCheckingOut","setIsCheckingOut","showDetailsForm","setShowDetailsForm","customerDetails","setCustomerDetails","name","address","phone","generateOrderId","Math","floor","random","handleCheckoutClick","handleInputChange","e","value","target","prev","handlePlaceOrder","orderId","post","dateOfOrder","Date","amount","alert","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","disabled","type","onChange","required","_c","$RefreshReg$"],"sources":["E:/mern/food-del/client/src/components/Cart.js"],"sourcesContent":["//Cart.js\r\n\r\n/*import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\r\n\r\nconst Cart = () => {\r\n    const { totalPrice, emptyCart } = useContext(RestaurantContext);\r\n    const [isCheckingOut, setIsCheckingOut] = useState(false);\r\n\r\n    const generateOrderId = () => {\r\n        // Generate a unique order ID \r\n        // (you can use a library like uuid for a more robust solution)\r\n        return `${Math.floor(Math.random() * 1000)}`;\r\n    };\r\n\r\n    const handleCheckout = async () => {\r\n        try {\r\n            setIsCheckingOut(true);\r\n\r\n            const orderId = generateOrderId();\r\n\r\n            // Assuming you have a backend endpoint to handle the checkout\r\n            const response = await axios.post(\r\n                \"http://localhost:5000/previousOrders\",\r\n                {\r\n                    orderId,\r\n                    dateOfOrder: new Date(),\r\n                    amount: totalPrice,\r\n                }\r\n            );\r\n\r\n            console.log(response.data);\r\n            emptyCart();\r\n        } catch (error) {\r\n            console.error(\"Error during checkout:\", error.message);\r\n        } finally {\r\n            setIsCheckingOut(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <h2>Cart</h2>\r\n            <div className=\"cart-content\">\r\n                <span style={{ color: \"brown\" }}>Total Price: </span> $\r\n                {totalPrice}\r\n                <button onClick={handleCheckout} disabled={isCheckingOut}>\r\n                    {isCheckingOut ? \"Checking out...\" : \"Checkout\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n*/\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\r\n\r\nconst Cart = () => {\r\n    const { totalPrice, emptyCart } = useContext(RestaurantContext);\r\n    const [isCheckingOut, setIsCheckingOut] = useState(false);\r\n    const [showDetailsForm, setShowDetailsForm] = useState(false);\r\n    const [customerDetails, setCustomerDetails] = useState({\r\n        name: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const generateOrderId = () => {\r\n        return `${Math.floor(Math.random() * 1000)}`;\r\n    };\r\n\r\n    const handleCheckoutClick = () => {\r\n        setShowDetailsForm(true);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCustomerDetails((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handlePlaceOrder = async () => {\r\n        try {\r\n            setIsCheckingOut(true);\r\n\r\n            const orderId = generateOrderId();\r\n\r\n            // Assuming you have a backend endpoint for placing orders\r\n            await axios.post(\"http://localhost:5000/previousOrders\", {\r\n                orderId,\r\n                dateOfOrder: new Date(),\r\n                amount: totalPrice,\r\n                ...customerDetails,\r\n            });\r\n\r\n            alert(\"Order placed successfully!\");\r\n            emptyCart();\r\n            setShowDetailsForm(false);\r\n        } catch (error) {\r\n            console.error(\"Error during order placement:\", error.message);\r\n        } finally {\r\n            setIsCheckingOut(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            {!showDetailsForm ? (\r\n                <>\r\n                    <h2>Cart</h2>\r\n                    <div className=\"cart-content\">\r\n                        <span style={{ color: \"brown\" }}>Total Price: </span> ${totalPrice}\r\n                        <button onClick={handleCheckoutClick} disabled={isCheckingOut}>\r\n                            {isCheckingOut ? \"Processing...\" : \"Checkout\"}\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h2>Delivery Details</h2>\r\n                    <form className=\"delivery-form\">\r\n                        <label>\r\n                            Name:\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={customerDetails.name}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Address:\r\n                            <textarea\r\n                                name=\"address\"\r\n                                value={customerDetails.address}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Phone Number:\r\n                            <input\r\n                                type=\"tel\"\r\n                                name=\"phone\"\r\n                                value={customerDetails.phone}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                        </label>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handlePlaceOrder}\r\n                            disabled={isCheckingOut}\r\n                        >\r\n                            {isCheckingOut ? \"Placing Order...\" : \"Place Order\"}\r\n                        </button>\r\n                    </form>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}