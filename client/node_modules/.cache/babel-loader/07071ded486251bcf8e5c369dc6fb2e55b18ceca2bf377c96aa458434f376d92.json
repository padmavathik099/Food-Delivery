{"ast":null,"code":"//RestaurantList.js\n\n/*import React, { useContext, useState, useEffect } from 'react';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport { RestaurantContext } from '../contexts/RestaurantContext';\r\nimport PreviousOrders from './PreviousOrders';\r\n\r\n\r\nconst RestaurantList = () => {\r\n    const { restaurants, setSelectedRestaurant } = useContext(RestaurantContext);\r\n    const [filteredRestaurants, setFilteredRestaurants] = useState([...restaurants]);\r\n    const [ratingFilter, setRatingFilter] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showOrder, setShowOrder] = useState(false)\r\n\r\n    useEffect(() => {\r\n        filterRestaurants();\r\n    }, [ratingFilter, searchTerm, restaurants]);\r\n\r\n    const handleRestaurantClick = (restaurantId) => {\r\n        setSelectedRestaurant(restaurants.find((restaurant) => restaurant._id === restaurantId));\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        setRatingFilter(e.target.value);\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const filterRestaurants = () => {\r\n        let filtered = restaurants;\r\n\r\n        if (ratingFilter) {\r\n            filtered = filtered.filter((restaurant) => restaurant.rating >= parseFloat(ratingFilter));\r\n        }\r\n\r\n        if (searchTerm) {\r\n            const searchLower = searchTerm.toLowerCase();\r\n            filtered = filtered.filter((restaurant) =>\r\n                restaurant.name.toLowerCase().includes(searchLower)\r\n            );\r\n        }\r\n\r\n        setFilteredRestaurants(filtered);\r\n    };\r\n    const handleShow = () => {\r\n        setShowOrder(!showOrder)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"header\">Restaurant List</h2>\r\n            <div className=\"filter-container\">\r\n                <label htmlFor=\"rating\" className=\"filter-label\">\r\n                    Filter by Rating:\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"rating\"\r\n                    value={ratingFilter}\r\n                    onChange={handleRatingChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <label htmlFor=\"search\" className=\"filter-label\">\r\n                    Search by Name:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <p id='pre-orders' onClick={handleShow}>\r\n                    Previous Orders\r\n                </p>\r\n            </div>\r\n            <div className=\"restaurant-card-container\">\r\n                {filteredRestaurants.map((restaurant) => (\r\n                    <RestaurantCard\r\n                        key={restaurant._id}\r\n                        restaurant={restaurant}\r\n                        onClick={() => handleRestaurantClick(restaurant._id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {showOrder && <PreviousOrders handleShow={handleShow} />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n*/","map":{"version":3,"names":[],"sources":["E:/mern/food-del/client/src/components/RestaurantList.js"],"sourcesContent":["//RestaurantList.js\r\n\r\n/*import React, { useContext, useState, useEffect } from 'react';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport { RestaurantContext } from '../contexts/RestaurantContext';\r\nimport PreviousOrders from './PreviousOrders';\r\n\r\n\r\nconst RestaurantList = () => {\r\n    const { restaurants, setSelectedRestaurant } = useContext(RestaurantContext);\r\n    const [filteredRestaurants, setFilteredRestaurants] = useState([...restaurants]);\r\n    const [ratingFilter, setRatingFilter] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showOrder, setShowOrder] = useState(false)\r\n\r\n    useEffect(() => {\r\n        filterRestaurants();\r\n    }, [ratingFilter, searchTerm, restaurants]);\r\n\r\n    const handleRestaurantClick = (restaurantId) => {\r\n        setSelectedRestaurant(restaurants.find((restaurant) => restaurant._id === restaurantId));\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        setRatingFilter(e.target.value);\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const filterRestaurants = () => {\r\n        let filtered = restaurants;\r\n\r\n        if (ratingFilter) {\r\n            filtered = filtered.filter((restaurant) => restaurant.rating >= parseFloat(ratingFilter));\r\n        }\r\n\r\n        if (searchTerm) {\r\n            const searchLower = searchTerm.toLowerCase();\r\n            filtered = filtered.filter((restaurant) =>\r\n                restaurant.name.toLowerCase().includes(searchLower)\r\n            );\r\n        }\r\n\r\n        setFilteredRestaurants(filtered);\r\n    };\r\n    const handleShow = () => {\r\n        setShowOrder(!showOrder)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"header\">Restaurant List</h2>\r\n            <div className=\"filter-container\">\r\n                <label htmlFor=\"rating\" className=\"filter-label\">\r\n                    Filter by Rating:\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"rating\"\r\n                    value={ratingFilter}\r\n                    onChange={handleRatingChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <label htmlFor=\"search\" className=\"filter-label\">\r\n                    Search by Name:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    className=\"filter-input\"\r\n                />\r\n                <p id='pre-orders' onClick={handleShow}>\r\n                    Previous Orders\r\n                </p>\r\n            </div>\r\n            <div className=\"restaurant-card-container\">\r\n                {filteredRestaurants.map((restaurant) => (\r\n                    <RestaurantCard\r\n                        key={restaurant._id}\r\n                        restaurant={restaurant}\r\n                        onClick={() => handleRestaurantClick(restaurant._id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {showOrder && <PreviousOrders handleShow={handleShow} />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n*/\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}