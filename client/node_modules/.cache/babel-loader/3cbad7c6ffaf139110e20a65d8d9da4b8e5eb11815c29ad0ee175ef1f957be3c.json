{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern\\\\food-del\\\\client\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\n//Cart.js\n\n/*import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\r\n\r\nconst Cart = () => {\r\n    const { totalPrice, emptyCart } = useContext(RestaurantContext);\r\n    const [isCheckingOut, setIsCheckingOut] = useState(false);\r\n\r\n    const generateOrderId = () => {\r\n        // Generate a unique order ID \r\n        // (you can use a library like uuid for a more robust solution)\r\n        return `${Math.floor(Math.random() * 1000)}`;\r\n    };\r\n\r\n    const handleCheckout = async () => {\r\n        try {\r\n            setIsCheckingOut(true);\r\n\r\n            const orderId = generateOrderId();\r\n\r\n            // Assuming you have a backend endpoint to handle the checkout\r\n            const response = await axios.post(\r\n                \"http://localhost:5000/previousOrders\",\r\n                {\r\n                    orderId,\r\n                    dateOfOrder: new Date(),\r\n                    amount: totalPrice,\r\n                }\r\n            );\r\n\r\n            console.log(response.data);\r\n            emptyCart();\r\n        } catch (error) {\r\n            console.error(\"Error during checkout:\", error.message);\r\n        } finally {\r\n            setIsCheckingOut(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <h2>Cart</h2>\r\n            <div className=\"cart-content\">\r\n                <span style={{ color: \"brown\" }}>Total Price: </span> $\r\n                {totalPrice}\r\n                <button onClick={handleCheckout} disabled={isCheckingOut}>\r\n                    {isCheckingOut ? \"Checking out...\" : \"Checkout\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n*/\n\nimport React, { useContext, useState } from \"react\";\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const {\n    cartItems,\n    totalPrice,\n    emptyCart\n  } = useContext(RestaurantContext);\n  const [showOrderForm, setShowOrderForm] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({\n    name: \"\",\n    address: \"\",\n    phone: \"\"\n  });\n  const handleOrder = e => {\n    e.preventDefault();\n    console.log(\"Order placed:\", orderDetails);\n    emptyCart();\n    setShowOrderForm(false);\n  };\n  const handleChange = e => {\n    setOrderDetails({\n      ...orderDetails,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cart-items\",\n      children: (cartItems === null || cartItems === void 0 ? void 0 : cartItems.length) > 0 ? cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cart-item\",\n        children: [item.name, \" - $\", item.price, \" x \", item.quantity]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Price: $\", totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), (cartItems === null || cartItems === void 0 ? void 0 : cartItems.length) > 0 && !showOrderForm && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"order-btn\",\n      onClick: () => setShowOrderForm(true),\n      children: \"Proceed to Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), showOrderForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"order-form\",\n      onSubmit: handleOrder,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Delivery Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: orderDetails.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"address\",\n        value: orderDetails.address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: orderDetails.phone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"place-order-btn\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"ZeCC9Ra5WORRPaWGDnAlqn3dvmk=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useState","RestaurantContext","jsxDEV","_jsxDEV","Cart","_s","cartItems","totalPrice","emptyCart","showOrderForm","setShowOrderForm","orderDetails","setOrderDetails","name","address","phone","handleOrder","e","preventDefault","console","log","handleChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","price","quantity","toFixed","onClick","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["E:/mern/food-del/client/src/components/Cart.js"],"sourcesContent":["//Cart.js\r\n\r\n/*import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\r\n\r\nconst Cart = () => {\r\n    const { totalPrice, emptyCart } = useContext(RestaurantContext);\r\n    const [isCheckingOut, setIsCheckingOut] = useState(false);\r\n\r\n    const generateOrderId = () => {\r\n        // Generate a unique order ID \r\n        // (you can use a library like uuid for a more robust solution)\r\n        return `${Math.floor(Math.random() * 1000)}`;\r\n    };\r\n\r\n    const handleCheckout = async () => {\r\n        try {\r\n            setIsCheckingOut(true);\r\n\r\n            const orderId = generateOrderId();\r\n\r\n            // Assuming you have a backend endpoint to handle the checkout\r\n            const response = await axios.post(\r\n                \"http://localhost:5000/previousOrders\",\r\n                {\r\n                    orderId,\r\n                    dateOfOrder: new Date(),\r\n                    amount: totalPrice,\r\n                }\r\n            );\r\n\r\n            console.log(response.data);\r\n            emptyCart();\r\n        } catch (error) {\r\n            console.error(\"Error during checkout:\", error.message);\r\n        } finally {\r\n            setIsCheckingOut(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <h2>Cart</h2>\r\n            <div className=\"cart-content\">\r\n                <span style={{ color: \"brown\" }}>Total Price: </span> $\r\n                {totalPrice}\r\n                <button onClick={handleCheckout} disabled={isCheckingOut}>\r\n                    {isCheckingOut ? \"Checking out...\" : \"Checkout\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n*/\r\n\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport { RestaurantContext } from \"../contexts/RestaurantContext\";\r\n\r\nconst Cart = () => {\r\n    const { cartItems, totalPrice, emptyCart } = useContext(RestaurantContext);\r\n    const [showOrderForm, setShowOrderForm] = useState(false);\r\n    const [orderDetails, setOrderDetails] = useState({\r\n        name: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n    });\r\n\r\n    const handleOrder = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Order placed:\", orderDetails);\r\n        emptyCart();\r\n        setShowOrderForm(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <h2>Your Cart</h2>\r\n            <ul className=\"cart-items\">\r\n                {cartItems?.length > 0 ? (\r\n                    cartItems.map((item, index) => (\r\n                        <li key={index} className=\"cart-item\">\r\n                            {item.name} - ${item.price} x {item.quantity}\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <p>Your cart is empty.</p>\r\n                )}\r\n            </ul>\r\n            <h3>Total Price: ${totalPrice.toFixed(2)}</h3>\r\n            {cartItems?.length > 0 && !showOrderForm && (\r\n                <button\r\n                    className=\"order-btn\"\r\n                    onClick={() => setShowOrderForm(true)}\r\n                >\r\n                    Proceed to Order\r\n                </button>\r\n            )}\r\n\r\n            {showOrderForm && (\r\n                <form className=\"order-form\" onSubmit={handleOrder}>\r\n                    <h2>Delivery Details</h2>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={orderDetails.name}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <label>Address:</label>\r\n                    <textarea\r\n                        name=\"address\"\r\n                        value={orderDetails.address}\r\n                        onChange={handleChange}\r\n                        required\r\n                    ></textarea>\r\n\r\n                    <label>Phone:</label>\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"phone\"\r\n                        value={orderDetails.phone}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <button type=\"submit\" className=\"place-order-btn\">\r\n                        Place Order\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,iBAAiB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC,SAAS;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGT,UAAU,CAACE,iBAAiB,CAAC;EAC1E,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAC7Ca,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,YAAY,CAAC;IAC1CH,SAAS,CAAC,CAAC;IACXE,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMW,YAAY,GAAIJ,CAAC,IAAK;IACxBL,eAAe,CAAC;MACZ,GAAGD,YAAY;MACf,CAACM,CAAC,CAACK,MAAM,CAACT,IAAI,GAAGI,CAAC,CAACK,MAAM,CAACC;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1B,OAAA;MAAIqB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACrB,CAAAnB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwB,MAAM,IAAG,CAAC,GAClBxB,SAAS,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB9B,OAAA;QAAgBqB,SAAS,EAAC,WAAW;QAAAC,QAAA,GAChCO,IAAI,CAACnB,IAAI,EAAC,MAAI,EAACmB,IAAI,CAACE,KAAK,EAAC,KAAG,EAACF,IAAI,CAACG,QAAQ;MAAA,GADvCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP,CAAC,gBAEF1B,OAAA;QAAAsB,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACL1B,OAAA;MAAAsB,QAAA,GAAI,gBAAc,EAAClB,UAAU,CAAC6B,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7C,CAAAvB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwB,MAAM,IAAG,CAAC,IAAI,CAACrB,aAAa,iBACpCN,OAAA;MACIqB,SAAS,EAAC,WAAW;MACrBa,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAAC,IAAI,CAAE;MAAAe,QAAA,EACzC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX,EAEApB,aAAa,iBACVN,OAAA;MAAMqB,SAAS,EAAC,YAAY;MAACc,QAAQ,EAAEtB,WAAY;MAAAS,QAAA,gBAC/CtB,OAAA;QAAAsB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB1B,OAAA;QAAAsB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB1B,OAAA;QACIoC,IAAI,EAAC,MAAM;QACX1B,IAAI,EAAC,MAAM;QACXU,KAAK,EAAEZ,YAAY,CAACE,IAAK;QACzB2B,QAAQ,EAAEnB,YAAa;QACvBoB,QAAQ;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEF1B,OAAA;QAAAsB,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvB1B,OAAA;QACIU,IAAI,EAAC,SAAS;QACdU,KAAK,EAAEZ,YAAY,CAACG,OAAQ;QAC5B0B,QAAQ,EAAEnB,YAAa;QACvBoB,QAAQ;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEZ1B,OAAA;QAAAsB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB1B,OAAA;QACIoC,IAAI,EAAC,KAAK;QACV1B,IAAI,EAAC,OAAO;QACZU,KAAK,EAAEZ,YAAY,CAACI,KAAM;QAC1ByB,QAAQ,EAAEnB,YAAa;QACvBoB,QAAQ;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEF1B,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAACf,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACxB,EAAA,CAnFID,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAqFV,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}